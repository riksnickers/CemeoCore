@model PagedList.IPagedList<CeMeOCore.DAL.Models.Location>
@using PagedList.Mvc;

@{
    ViewBag.page = "List";
    ViewBag.title = "Locations";
    Layout = "~/Views/Shared/AdminHeader.cshtml";
}

<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@using (Html.BeginForm("Index", "Locations", FormMethod.Get))
{
    <div class="form-group input-group" role="search">
        @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @class = "form-control" })
        <span class="input-group-btn">
            <button type="submit" class="btn btn-default"><i class="fa fa-search">Search</i></button>
        </span>
    </div>
}
<div class="col-lg-6">
    <div class="table-responsive">
        <table class="table table-hover table-striped tablesorter">
            <thead>
                <tr>
                    <th>
                        @Html.ActionLink("Name", "Index", new { sortOrder = ViewBag.NameSortParm })
                        <i class="fa fa-sort"></i>
                    </th>
                    <th>
                        @Html.ActionLink("Street", "Index", new { sortOrder = ViewBag.StreetSortParm })
                        <i class="fa fa-sort"></i>
                    </th>
                    <th>
                        @Html.ActionLink("Number", "Index", new { sortOrder = ViewBag.NumberSortParm })
                        <i class="fa fa-sort"></i>
                    </th>
                    <th>
                        @Html.ActionLink("Addition", "Index", new { sortOrder = ViewBag.AdditionSortParm })
                        <i class="fa fa-sort"></i>
                    </th>
                    <th>
                        @Html.ActionLink("Zip", "Index", new { sortOrder = ViewBag.ZipSortParm })
                        <i class="fa fa-sort"></i>
                    </th>
                    <th>
                        @Html.ActionLink("City", "Index", new { sortOrder = ViewBag.CitySortParm })
                        <i class="fa fa-sort"></i>
                    </th>
                    <th>
                        @Html.ActionLink("State", "Index", new { sortOrder = ViewBag.StateSortParm })
                        <i class="fa fa-sort"></i>
                    </th>
                    <th>
                        @Html.ActionLink("Country", "Index", new { sortOrder = ViewBag.CountrySortParm })
                        <i class="fa fa-sort"></i>
                    </th>
                </tr>
            </thead>

            @foreach (var item in Model)
            {
                <tbody>
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Street)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Number)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Addition)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Zip)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.City)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.State)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Country)
                        </td>
                        <td>
                            <span class="glyphicon glyphicon-pencil">
                                @Html.ActionLink("Edit", "Edit", new { id = item.LocationID })
                            </span>
                            <span class="glyphicon glyphicon-search">
                                @Html.ActionLink("Details", "Details", new { id = item.LocationID })
                            </span>

                            <!-- Button trigger modal -->
                            <button class="btn btn-primary btn-lg" data-toggle="modal" data-target="#myModal">
                                Delete
                            </button>

                            <!-- Modal -->
                            <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
                                <div class="modal-dialog">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                                            <h4 class="modal-title" id="myModalLabel">Delete location</h4>
                                        </div>
                                        <div class="modal-body">
                                            Are you sure you want to delete the following location?
                                        </div>
                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                                            <button type="button" class="btn btn-primary" onclick="location.href='@Url.Action("DeleteLocation", "Locations", new { id = item.LocationID })'">Delete</button>
                                        </div>
                                    </div><!-- /.modal-content -->
                                </div><!-- /.modal-dialog -->
                            </div><!-- /.modal -->

                        </td>
                    </tr>
                </tbody>
            }

        </table>
        <button type="submit" class="btn btn-default">@Html.ActionLink("Create New", "Create")</button>
        @Html.PagedListPager(Model, page => Url.Action("Index",
        new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
    </div>
</div>
